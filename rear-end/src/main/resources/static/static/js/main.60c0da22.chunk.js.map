{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","domain","corpId","authCode","userId","userName","groupId","title","topCardId","imCardId","msg","this","getCorpId","className","type","onClick","create","sendIm","e","updateMsg","sendMsg","complete","cardId","axios","post","then","res","data","success","alert","JSON","stringify","catch","error","setState","get","login","_this","dd","permission","requestAuthCode","onSuccess","code","onFail","err","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,I,oCCsKAA,E,kDA9Jb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAGXC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTC,MAAO,2BACPC,UAAW,GACXC,SAAU,GACVC,IAAK,iJAdU,E,0CAiBnB,WAAU,IAAD,OAIP,MAHyB,KAAtBC,KAAKX,MAAME,QACZS,KAAKC,YAGH,sBAAKC,UAAU,MAAf,UACE,0DACA,4BAAG,qJACH,4BAAG,wBAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKC,UAA1C,gEACH,4BAAG,wBAAQF,KAAK,SAASC,QAAS,kBAAM,EAAKE,UAA1C,8EACH,4BAAG,wBAAQH,KAAK,SAASC,QAAS,SAACG,GAAD,OAAO,EAAKC,UAAUD,EAAE,EAAKlB,MAAMS,WAAlE,wCACH,4BAAG,wBAAQK,KAAK,SAASC,QAAS,kBAAM,EAAKK,WAA1C,8FACH,4BAAG,wBAAQN,KAAK,SAASC,QAAS,SAACG,GAAD,OAAO,EAAKC,UAAUD,EAAE,EAAKlB,MAAMQ,YAAlE,wFACH,4BAAG,wBAAQM,KAAK,SAASC,QAAS,kBAAM,EAAKM,YAA1C,qE,uBAIX,SAAUH,EAAGI,GACXC,IAAMC,KAAKb,KAAKX,MAAMC,OAAS,iGAAiDqB,GAC9EG,MAAK,SAAAC,GACDA,GAAOA,EAAIC,KAAKC,QACfF,EAAIC,KAAKA,KACVE,MAAM,kCAENA,MAAM,kCAGRA,MAAM,2BAA0BC,KAAKC,UAAUL,OAEhDM,OAAM,SAAAC,GACPJ,MAAM,kBAAmBC,KAAKC,UAAUE,S,oBAG5C,WAAS,IAAD,OACNV,IAAMC,KAAKb,KAAKX,MAAMC,OAAS,8BAAgCU,KAAKX,MAAMM,QAAU,QAAUK,KAAKX,MAAMU,KACvGe,MAAK,SAAAC,GACDA,GAAOA,EAAIC,KAAKC,QACfF,EAAIC,KAAKA,MACV,EAAKO,SAAS,CACZzB,SAASiB,EAAIC,KAAKA,OAEpBE,MAAM,mCAENA,MAAM,kCAGRA,MAAM,wBAAuBC,KAAKC,UAAUL,OAE7CM,OAAM,SAAAC,GACPJ,MAAM,eAAgBC,KAAKC,UAAUE,S,sBAGzC,WACEV,IAAMC,KAAKb,KAAKX,MAAMC,OAAS,gCAAkCU,KAAKX,MAAMM,QAAU,cAAgBK,KAAKX,MAAMQ,WAC/GiB,MAAK,SAAAC,GACDA,GAAOA,EAAIC,KAAKC,QAClBC,MAAM,8CAENA,MAAM,0BAAyBC,KAAKC,UAAUL,OAE/CM,OAAM,SAAAC,GACPJ,MAAM,iBAAkBC,KAAKC,UAAUE,S,qBAG3C,WAAU,IAAD,OACPV,IAAMC,KAAKb,KAAKX,MAAMC,OAAS,+BAAiCU,KAAKX,MAAMM,QAAU,QAAUK,KAAKX,MAAMU,KACxGe,MAAK,SAAAC,GACL,GAAIA,GAAOA,EAAIC,KAAKC,QAAS,CAC3B,IAAIpB,EAAYkB,EAAIC,KAAKA,KACzBE,MAAM,sEACN,EAAKK,SAAS,CACZ1B,UAAUA,SAIZqB,MAAM,yBAAwBC,KAAKC,UAAUL,OAE9CM,OAAM,SAAAC,GACPJ,MAAM,gBAAiBC,KAAKC,UAAUE,S,oBAG1C,WAAS,IAAD,OACNV,IAAMC,KAAKb,KAAKX,MAAMC,OAAS,6BAA+BU,KAAKX,MAAMI,OAAS,UAAYO,KAAKX,MAAMO,OACvGkB,MAAK,SAAAC,GACL,GAAIA,GAAOA,EAAIC,KAAKC,QAAS,CAC3B,IAAItB,EAAUoB,EAAIC,KAAKA,KACvBE,MAAM,8CACN,EAAKK,SAAS,CACZ5B,QAAQA,SAGVuB,MAAM,wBAAuBC,KAAKC,UAAUL,OAE7CM,OAAM,SAAAC,GACPJ,MAAM,eAAgBC,KAAKC,UAAUE,S,uBAGzC,WAAY,IAAD,OACTV,IAAMY,IAAIxB,KAAKX,MAAMC,OAAS,cACzBwB,MAAK,SAAAC,GACDA,EAAIC,MACL,EAAKS,MAAMV,EAAIC,SAEhBK,OAAM,SAAAC,GACXJ,MAAM,eAAgBC,KAAKC,UAAUE,S,mBAGzC,SAAM/B,GACJ2B,MAAM,WAAc3B,GACpB,IAAImC,EAAQ1B,KACZ2B,UAAWC,WAAWC,gBAAgB,CACpCtC,OAAQA,EACRuC,UAAY,SAASf,GAEnBW,EAAMrC,MAAMG,SAAWuB,EAAIgB,KAC3BnB,IAAMY,IAAIE,EAAMrC,MAAMC,OAAS,mBAAqBoC,EAAMrC,MAAMG,UAC9DsB,MAAK,SAAAC,GACL,GAAIA,GAAOA,EAAIC,KAAKC,QAAS,CAC3B,IAAIxB,EAASsB,EAAIC,KAAKA,KAAKvB,OACvBC,EAAWqB,EAAIC,KAAKA,KAAKtB,SAC7BwB,MAAM,6CAAYxB,GAClBgC,EAAMH,SAAS,CACb9B,OAAOA,EACPC,SAASA,SAGXwB,MAAM,uBAAsBC,KAAKC,UAAUL,OAE5CM,OAAM,SAAAC,GACPJ,MAAM,6BAA4BC,KAAKC,UAAUE,QAGrDU,OAAS,SAASC,GAEhBf,MAAM,iCAAgCC,KAAKC,UAAUa,W,GAxJ3CC,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.60c0da22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport * as dd from 'dingtalk-jsapi';\nimport axios from 'axios';\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      //内网穿透工具介绍:\n      // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n      domain: \"\",\n      corpId: '',\n      authCode: '',\n      userId: '',\n      userName: '',\n      groupId: '',\n      title: '故障维修',\n      topCardId: '',\n      imCardId: '',\n      msg: '一号机房发生故障，不能正常工作，请尽快维修处理!!!',\n    }\n  }\n  render() {\n    if(this.state.corpId === ''){\n      this.getCorpId();\n    }\n    return (\n        <div className=\"App\">\n          <h2>故障处理</h2>\n          <p><small>置顶功能pc端无法查看时，请在手机端查看</small></p>\n          <p><button type=\"button\" onClick={() => this.create()}>发生故障自动建群</button></p>\n          <p><button type=\"button\" onClick={() => this.sendIm()}>推送故障消息（IM卡片）</button></p>\n          <p><button type=\"button\" onClick={(e) => this.updateMsg(e,this.state.imCardId)}>更新消息</button></p>\n          <p><button type=\"button\" onClick={() => this.sendMsg()}>故障消息群置顶（置顶卡片）</button></p>\n          <p><button type=\"button\" onClick={(e) => this.updateMsg(e,this.state.topCardId)}>更新置顶消息（置顶卡片）</button></p>\n          <p><button type=\"button\" onClick={() => this.complete()}>故障修复取消置顶</button></p>\n        </div>\n    );\n  }\n  updateMsg(e, cardId){\n    axios.post(this.state.domain + \"/sceneGroup/updateMsg?msg=消息更新——故障修复&cardId=\" + cardId\n    ).then(res => {\n      if (res && res.data.success) {\n        if(res.data.data){\n          alert(\"更新成功！\")\n        }else{\n          alert(\"更新失败！\")\n        }\n      } else {\n        alert(\"updateMsg failed --->\" + JSON.stringify(res));\n      }\n    }).catch(error => {\n      alert(\"updateMsg err, \", JSON.stringify(error))\n    })\n  }\n  sendIm(){\n    axios.post(this.state.domain + \"/sceneGroup/sendIm?groupId=\" + this.state.groupId + \"&msg=\" + this.state.msg\n    ).then(res => {\n      if (res && res.data.success) {\n        if(res.data.data){\n          this.setState({\n            imCardId:res.data.data\n          })\n          alert(\"发送成功！\")\n        }else{\n          alert(\"发送失败！\")\n        }\n      } else {\n        alert(\"sendIm failed --->\" + JSON.stringify(res));\n      }\n    }).catch(error => {\n      alert(\"sendIm err, \", JSON.stringify(error))\n    })\n  }\n  complete(){\n    axios.post(this.state.domain + \"/sceneGroup/complete?groupId=\" + this.state.groupId + \"&topCardId=\" + this.state.topCardId\n    ).then(res => {\n      if (res && res.data.success) {\n        alert(\"故障修复完成！\");\n      } else {\n        alert(\"complete failed --->\" + JSON.stringify(res));\n      }\n    }).catch(error => {\n      alert(\"complete err, \", JSON.stringify(error))\n    })\n  }\n  sendMsg(){\n    axios.post(this.state.domain + \"/sceneGroup/sendMsg?groupId=\" + this.state.groupId + \"&msg=\" + this.state.msg\n    ).then(res => {\n      if (res && res.data.success) {\n        let topCardId = res.data.data;\n        alert('开启置顶消息成功！！！');\n        this.setState({\n          topCardId:topCardId\n        })\n\n      } else {\n        alert(\"sendMsg failed --->\" + JSON.stringify(res));\n      }\n    }).catch(error => {\n      alert(\"sendMsg err, \", JSON.stringify(error))\n    })\n  }\n  create(){\n    axios.post(this.state.domain + \"/sceneGroup/create?userId=\" + this.state.userId + \"&title=\" + this.state.title\n    ).then(res => {\n      if (res && res.data.success) {\n        let groupId = res.data.data;\n        alert('建群成功！！！');\n        this.setState({\n          groupId:groupId\n        })\n      } else {\n        alert(\"create failed --->\" + JSON.stringify(res));\n      }\n    }).catch(error => {\n      alert(\"create err, \", JSON.stringify(error))\n    })\n  }\n  getCorpId(){\n    axios.get(this.state.domain + \"/getCorpId\")\n        .then(res => {\n          if(res.data){\n            this.login(res.data);\n          }\n        }).catch(error => {\n      alert(\"corpId err, \", JSON.stringify(error))\n    })\n  }\n  login(corpId) {\n    alert(\"corpId: \" +  corpId);\n    let _this = this;\n    dd.runtime.permission.requestAuthCode({\n      corpId: corpId,//企业 corpId\n      onSuccess : function(res) {\n        // 调用成功时回调\n        _this.state.authCode = res.code\n        axios.get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode\n        ).then(res => {\n          if (res && res.data.success) {\n            let userId = res.data.data.userId;\n            let userName = res.data.data.userName;\n            alert('登录成功，你好' + userName);\n            _this.setState({\n              userId:userId,\n              userName:userName\n            })\n          } else {\n            alert(\"login failed --->\" + JSON.stringify(res));\n          }\n        }).catch(error => {\n          alert(\"httpRequest failed --->\" + JSON.stringify(error))\n        })\n      },\n      onFail : function(err) {\n        // 调用失败时回调\n        alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n      }\n    });\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}